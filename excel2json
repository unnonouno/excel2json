#!/usr/bin/env python

# Copyright (c) 2012 Yuya Unno.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import csv
from contextlib import contextmanager

def utf_8_encoder(unicode_csv_data):
    for line in unicode_csv_data:
        yield line.decode('shift_jis', errors='ignore').encode('utf-8')

@contextmanager
def open_excel_csv_as_dict(path):
    with open(path, 'rU') as input:
        yield csv.DictReader(utf_8_encoder(input), dialect='excel')

@contextmanager
def open_excel_csv(path):
    with open(path, 'rU') as input:
        yield csv.reader(utf_8_encoder(input), dialect='excel')

if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(
        description='Convert an Excel CSV file to a JSON.')
    parser.add_argument('-d', '--dict', action='store_true',
                        help='print as a dictionary.')
    parser.add_argument('file', metavar='FILE',
                        help='excel CSV file to open.')

    args = parser.parse_args()

    import json
    if args.dict:
        with open_excel_csv_as_dict(args.file) as input:
            for row in input:
                print(json.dumps(row))
    else:
        with open_excel_csv(args.file) as input:
            for row in input:
                print(json.dumps(row))

